// Code generated by protoc-gen-go. DO NOT EDIT.
// source: server.proto

package server

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import snomed "github.com/wardle/go-terminology/snomed"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SctID struct {
	Identifier           int64    `protobuf:"varint,1,opt,name=identifier,proto3" json:"identifier,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SctID) Reset()         { *m = SctID{} }
func (m *SctID) String() string { return proto.CompactTextString(m) }
func (*SctID) ProtoMessage()    {}
func (*SctID) Descriptor() ([]byte, []int) {
	return fileDescriptor_server_2b77087df680c85e, []int{0}
}
func (m *SctID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SctID.Unmarshal(m, b)
}
func (m *SctID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SctID.Marshal(b, m, deterministic)
}
func (dst *SctID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SctID.Merge(dst, src)
}
func (m *SctID) XXX_Size() int {
	return xxx_messageInfo_SctID.Size(m)
}
func (m *SctID) XXX_DiscardUnknown() {
	xxx_messageInfo_SctID.DiscardUnknown(m)
}

var xxx_messageInfo_SctID proto.InternalMessageInfo

func (m *SctID) GetIdentifier() int64 {
	if m != nil {
		return m.Identifier
	}
	return 0
}

func init() {
	proto.RegisterType((*SctID)(nil), "server.SctID")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SnomedCTClient is the client API for SnomedCT service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SnomedCTClient interface {
	GetConcept(ctx context.Context, in *SctID, opts ...grpc.CallOption) (*snomed.Concept, error)
}

type snomedCTClient struct {
	cc *grpc.ClientConn
}

func NewSnomedCTClient(cc *grpc.ClientConn) SnomedCTClient {
	return &snomedCTClient{cc}
}

func (c *snomedCTClient) GetConcept(ctx context.Context, in *SctID, opts ...grpc.CallOption) (*snomed.Concept, error) {
	out := new(snomed.Concept)
	err := c.cc.Invoke(ctx, "/server.SnomedCT/GetConcept", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SnomedCTServer is the server API for SnomedCT service.
type SnomedCTServer interface {
	GetConcept(context.Context, *SctID) (*snomed.Concept, error)
}

func RegisterSnomedCTServer(s *grpc.Server, srv SnomedCTServer) {
	s.RegisterService(&_SnomedCT_serviceDesc, srv)
}

func _SnomedCT_GetConcept_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SctID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SnomedCTServer).GetConcept(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/server.SnomedCT/GetConcept",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SnomedCTServer).GetConcept(ctx, req.(*SctID))
	}
	return interceptor(ctx, in, info, handler)
}

var _SnomedCT_serviceDesc = grpc.ServiceDesc{
	ServiceName: "server.SnomedCT",
	HandlerType: (*SnomedCTServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetConcept",
			Handler:    _SnomedCT_GetConcept_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "server.proto",
}

func init() { proto.RegisterFile("server.proto", fileDescriptor_server_2b77087df680c85e) }

var fileDescriptor_server_2b77087df680c85e = []byte{
	// 212 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x29, 0x4e, 0x2d, 0x2a,
	0x4b, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x83, 0xf0, 0xa4, 0x4c, 0xd2, 0x33,
	0x4b, 0x32, 0x4a, 0x93, 0xf4, 0x92, 0xf3, 0x73, 0xf5, 0xcb, 0x13, 0x8b, 0x52, 0x72, 0x52, 0xf5,
	0xd3, 0xf3, 0x75, 0x4b, 0x52, 0x8b, 0x72, 0x33, 0xf3, 0xf2, 0x73, 0xf2, 0xd3, 0x2b, 0xf5, 0x8b,
	0xf3, 0xf2, 0x73, 0x53, 0x53, 0xa0, 0x14, 0x44, 0xb7, 0x94, 0x4c, 0x7a, 0x7e, 0x7e, 0x7a, 0x4e,
	0xaa, 0x7e, 0x62, 0x41, 0xa6, 0x7e, 0x62, 0x5e, 0x5e, 0x7e, 0x49, 0x62, 0x49, 0x66, 0x7e, 0x5e,
	0x31, 0x44, 0x56, 0x49, 0x9d, 0x8b, 0x35, 0x38, 0xb9, 0xc4, 0xd3, 0x45, 0x48, 0x8e, 0x8b, 0x2b,
	0x33, 0x25, 0x35, 0xaf, 0x24, 0x33, 0x2d, 0x33, 0xb5, 0x48, 0x82, 0x51, 0x81, 0x51, 0x83, 0x39,
	0x08, 0x49, 0xc4, 0x28, 0x89, 0x8b, 0x23, 0x18, 0x6c, 0xac, 0x73, 0x88, 0x50, 0x18, 0x17, 0x97,
	0x7b, 0x6a, 0x89, 0x73, 0x7e, 0x5e, 0x72, 0x6a, 0x41, 0x89, 0x10, 0xaf, 0x1e, 0xd4, 0xb5, 0x60,
	0x83, 0xa4, 0xf8, 0xf5, 0xa0, 0xd6, 0x43, 0xe5, 0x95, 0x34, 0x9a, 0x2e, 0x3f, 0x99, 0xcc, 0xa4,
	0x24, 0xa4, 0xa0, 0x5f, 0x66, 0x08, 0x73, 0x61, 0x32, 0x44, 0xae, 0x58, 0xbf, 0x1a, 0x61, 0x45,
	0x6d, 0x12, 0x1b, 0xd8, 0x4d, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x99, 0x48, 0x82, 0x2a,
	0xff, 0x00, 0x00, 0x00,
}
